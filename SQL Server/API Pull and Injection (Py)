import requests #Making HTTP Requests to API
import pyodbc #Connecting and executing SQL Queries
import json # handling json data

#Fetch latest exhange rates
api_url = "...." 

#connection to SQL Server Database
conn = pyodbc.connect('DRIVER={SQL Server};'
                      'SERVER=localhost\\SQLEXPRESS;'
                      'DATABASE=DemoDatabase;'
                      'Trusted_Connection=yes;')
#cursor object to execute SQL queries
cursor = conn.cursor()
try:
    #send GET request to API to retrieve exchange rate data
    response = requests.get(api_url)
    #check if HTTP Request was successfull
    response.raise_for_status()
    #Parse JSON response from API
    data = response.json()

    #extract necessary data field from API response
    success = data.get('success', None)
    timestamp = data.get('timestamp', None)
    base_currency = data.get('base', None)
    rate_date = data.get('date', None)

    #check if fields are available
    if success is not None and base_currency is not None and rate_date is not None:
        try: 
            #Insert new records into RatesHeader table and retrieve generated RateID
            cursor.execute('''
                INSERT INTO RatesHeader (Success, Timestamp, BaseCurrency, RateDate)
                OUTPUT INSERTED.RateID
                VALUES (?, ?, ?, ?)''',
                success, timestamp, base_currency, rate_date)
            rate_id = cursor.fetchone()[0]

            #check if RateID is available
            if rate_id:
                print(f"Inserted into RatesHeader. RateID: {rate_id}")

                #insert currency's exchange rate into RateDetails table
                for currency_code, exchange_rate in data['rates'].items():
                    cursor.execute('''
                        INSERT INTO RatesDetails(RateID, CurrencyCode, ExchangeRate)
                        VALUES (?, ?, ?)''',
                        rate_id, currency_code, exchange_rate)
                #commit to transaction and save changes to database with error catches
                conn.commit()
                print("Inserted Data into RatesDetails")
            else:
                print("Error: RateID not found after inserting into RatesHeader.") 
        except Exception as insert_err:
            print(f"Error during insertion: {insert_err}")
    else:
        print("Error: Required keys are missing from the API response.")

#HTTP Error catches
except requests.exceptions.HTTPError as http_err:
    print(f"HTTP error occured: {http_err}")
except requests.exceptions.RequestException as req_err:
    print(f"Request error occured: {req_err}")
except json.JSONDecodeError as json_err:
    print(f"Error parsing JSON: {json_err}")
except Exception as e:
    print(f"An error occurred: {e}")

#closes connection to database
finally:
    conn.close()
    
print("Script Complete.")
